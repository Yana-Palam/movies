{"version":3,"file":"static/js/417.cdbad89f.chunk.js","mappings":"uOAEaA,EAAOC,EAAAA,GAAAA,GAAH,4EAMJC,EAAOD,EAAAA,GAAAA,GAAH,4MAYJE,EAAQF,EAAAA,GAAAA,GAAH,0H,mBCiClB,EA7Ca,WACX,OAAkCG,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAASI,MAAK,SAAAC,GACzBN,EAAaM,EACd,GACF,GAAE,CAACL,KAGF,8BACGF,IACC,SAACQ,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,WACE,SAACd,EAAD,UACGK,EAAUU,KAAKC,KACd,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,cAAeC,EAA1C,EAA0CA,UAA1C,OACE,UAACnB,EAAD,WACGgB,GACC,gBACEI,IAAKC,EAAAA,GAAY,OAASL,EAC1BM,IAAKL,GAAQC,KAGf,gBAAKE,IAAKG,EAAQD,IAAI,SAASE,MAAM,MAAMC,OAAO,SAGpD,SAACxB,EAAD,UAAQgB,GAAQC,IACfC,IACC,0BACE,sCADF,IACqBA,OAbdJ,EADb,WA0Bf,C,kFCjDYW,EAAe3B,EAAAA,GAAAA,IAAH,iFAMZE,EAAQF,EAAAA,GAAAA,GAAH,mI,SCWlB,EAfkB,SAAC,GAA8B,IAAD,IAA3B4B,MAAAA,OAA2B,MAAnB,GAAmB,EAAfC,EAAe,EAAfA,SAC/B,OACE,UAACF,EAAD,WACGC,IAAS,SAAC1B,EAAD,UAAQ0B,IAEjBC,IAGN,C,sECVYC,E,QAAa9B,GAAAA,QAAH,uE,SCSvB,EARgB,SAAC,GAAkB,IAAhB6B,EAAe,EAAfA,SACjB,OAAO,SAACC,EAAD,UAAaD,GACrB,C,mOCHKE,EAAW,gCACXC,EAAU,mCACHV,EAAY,8BAEZW,EAAiB,mCAAG,oGACbC,IAAAA,IAAA,UACbH,EADa,sCACyBC,IAFZ,cACzBrB,EADyB,yBAIxBA,EAAIwB,KAAKC,SAJe,2CAAH,qDAOjBC,EAAe,mCAAG,WAAMrB,GAAN,uFACXkB,IAAAA,IAAA,UAAaH,EAAb,iBAA8Bf,EAA9B,oBAA4CgB,IADjC,cACvBrB,EADuB,yBAEtBA,EAAIwB,MAFkB,2CAAH,sDAKf1B,EAAY,mCAAG,WAAMO,GAAN,uFACRkB,IAAAA,IAAA,UACbH,EADa,iBACIf,EADJ,4BAC0BgB,IAFlB,cACpBrB,EADoB,yBAInBA,EAAIwB,MAJe,2CAAH,sDAOZG,EAAe,mCAAG,WAAMtB,GAAN,uFACXkB,IAAAA,IAAA,UACbH,EADa,iBACIf,EADJ,4BAC0BgB,IAFf,cACvBrB,EADuB,yBAItBA,EAAIwB,KAAKC,SAJa,2CAAH,sDAOfG,EAAc,mCAAG,WAAMC,GAAN,uFACVN,IAAAA,IAAA,UACbH,EADa,gCACmBC,EADnB,kBACoCQ,IAF1B,cACtB7B,EADsB,yBAIrBA,EAAIwB,KAAKC,SAJY,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Container/Container.styled.js","components/Container/Container.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 42px;\n  flex-wrap: wrap;\n`;\n\nexport const Item = styled.li`\n  padding: 8px;\n  display: flex;\n  width: 185px;\n  flex-direction: column;\n  text-align: center;\n  border: 2px solid #fd5103;\n  color: #000000;\n\n  background-color: #fff;\n`;\n\nexport const Title = styled.h3`\n  font-size: 20px;\n  line-height: 1.4;\n  font-weight: 700;\n  padding: 6px;\n  color: #fd5103;\n`;\n","import { getMovieCast } from 'services/themoviedbAPI';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Container from 'components/Container';\nimport Section from 'components/Section';\nimport { IMAGE_URL } from 'services/themoviedbAPI';\nimport { List, Item, Title } from './Cast.styled';\nimport avatar from '../../assets/images/avatar.jpg';\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast(movieId).then(res => {\n      setMovieCast(res);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {movieCast && (\n        <Section>\n          <Container>\n            <List>\n              {movieCast.cast.map(\n                ({ id, profile_path, name, original_name, character }) => (\n                  <Item key={id}>\n                    {profile_path ? (\n                      <img\n                        src={IMAGE_URL + 'w185' + profile_path}\n                        alt={name || original_name}\n                      />\n                    ) : (\n                      <img src={avatar} alt=\"avatar\" width=\"185\" height=\"278\" />\n                    )}\n\n                    <Title>{name || original_name}</Title>\n                    {character && (\n                      <p>\n                        <b>Character:</b> {character}\n                      </p>\n                    )}\n                  </Item>\n                )\n              )}\n            </List>\n          </Container>\n        </Section>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const ContainerWpr = styled.div`\n  padding: 0 15px;\n  margin: 0 auto;\n  width: 1200px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 36px;\n  font-weight: 700;\n  margin-bottom: 60px;\n  text-align: center;\n  color: #fd5103;\n`;\n","import PropTypes from 'prop-types';\n\nimport { ContainerWpr, Title } from './Container.styled';\n\nconst Container = ({ title = '', children }) => {\n  return (\n    <ContainerWpr>\n      {title && <Title>{title}</Title>}\n\n      {children}\n    </ContainerWpr>\n  );\n};\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import styled from 'styled-components';\n\nexport const SectionWrp = styled.section`\n  padding-top: 34px;\n  padding-bottom: 34px;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionWrp } from './Section.styled';\n\nconst Section = ({ children }) => {\n  return <SectionWrp>{children}</SectionWrp>;\n};\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '43658d6d4343b834cdd29cb42d0281f9';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/';\n\nexport const getTrendingMovies = async () => {\n  const res = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return res.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const res = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieCast = async id => {\n  const res = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return res.data;\n};\n\nexport const getMovieReviews = async id => {\n  const res = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return res.data.results;\n};\n\nexport const getSearchMovie = async query => {\n  const res = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return res.data.results;\n};\n"],"names":["List","styled","Item","Title","useState","movieCast","setMovieCast","movieId","useParams","useEffect","getMovieCast","then","res","Section","Container","cast","map","id","profile_path","name","original_name","character","src","IMAGE_URL","alt","avatar","width","height","ContainerWpr","title","children","SectionWrp","BASE_URL","API_KEY","getTrendingMovies","axios","data","results","getMovieDetails","getMovieReviews","getSearchMovie","query"],"sourceRoot":""}