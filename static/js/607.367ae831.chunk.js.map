{"version":3,"file":"static/js/607.367ae831.chunk.js","mappings":"gKAEaA,EAAeC,EAAAA,GAAAA,IAAH,iFAMZC,EAAQD,EAAAA,GAAAA,GAAH,mI,SCWlB,EAfkB,SAAC,GAA8B,IAAD,IAA3BE,MAAAA,OAA2B,MAAnB,GAAmB,EAAfC,EAAe,EAAfA,SAC/B,OACE,UAACJ,EAAD,WACGG,IAAS,SAACD,EAAD,UAAQC,IAEjBC,IAGN,C,wJCVYC,EAASJ,EAAAA,GAAAA,GAAH,4JASNK,EAAOL,EAAAA,GAAAA,EAAH,+D,SC4BjB,EAhCgB,WACd,OAAwCM,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAC5BN,EAAgBM,EACjB,GACF,GAAE,CAACL,KAGF,SAACM,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,WACE,wBACGT,EAAaU,OAAS,EACrBV,EAAaW,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,GAAIC,EAAf,EAAeA,QAAf,OACf,UAACjB,EAAD,YACE,0BACE,mCADF,IACkBe,MAElB,uBAAIE,MAJOD,EADE,KASjB,SAACf,EAAD,6DAMX,C,sECnCYiB,E,QAAatB,GAAAA,QAAH,uE,SCSvB,EARgB,SAAC,GAAkB,IAAhBG,EAAe,EAAfA,SACjB,OAAO,SAACmB,EAAD,UAAanB,GACrB,C,mOCHKoB,EAAW,gCACXC,EAAU,mCACHC,EAAY,8BAEZC,EAAiB,mCAAG,oGACbC,IAAAA,IAAA,UACbJ,EADa,sCACyBC,IAFZ,cACzBV,EADyB,yBAIxBA,EAAIc,KAAKC,SAJe,2CAAH,qDAOjBC,EAAe,mCAAG,WAAMV,GAAN,uFACXO,IAAAA,IAAA,UAAaJ,EAAb,iBAA8BH,EAA9B,oBAA4CI,IADjC,cACvBV,EADuB,yBAEtBA,EAAIc,MAFkB,2CAAH,sDAKfG,EAAY,mCAAG,WAAMX,GAAN,uFACRO,IAAAA,IAAA,UACbJ,EADa,iBACIH,EADJ,4BAC0BI,IAFlB,cACpBV,EADoB,yBAInBA,EAAIc,MAJe,2CAAH,sDAOZhB,EAAe,mCAAG,WAAMQ,GAAN,uFACXO,IAAAA,IAAA,UACbJ,EADa,iBACIH,EADJ,4BAC0BI,IAFf,cACvBV,EADuB,yBAItBA,EAAIc,KAAKC,SAJa,2CAAH,sDAOfG,EAAc,mCAAG,WAAMC,GAAN,uFACVN,IAAAA,IAAA,UACbJ,EADa,gCACmBC,EADnB,kBACoCS,IAF1B,cACtBnB,EADsB,yBAIrBA,EAAIc,KAAKC,SAJY,2CAAH,qD","sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerWpr = styled.div`\n  padding: 0 15px;\n  margin: 0 auto;\n  width: 1200px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 36px;\n  font-weight: 700;\n  margin-bottom: 60px;\n  text-align: center;\n  color: #fd5103;\n`;\n","import PropTypes from 'prop-types';\n\nimport { ContainerWpr, Title } from './Container.styled';\n\nconst Container = ({ title = '', children }) => {\n  return (\n    <ContainerWpr>\n      {title && <Title>{title}</Title>}\n\n      {children}\n    </ContainerWpr>\n  );\n};\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import styled from 'styled-components';\n\nexport const Review = styled.li`\n  font-size: 18px;\n  line-height: 1.4;\n  margin-bottom: 20px;\n  color: #ffffff;\n  border: 2px solid #fd5103;\n  padding: 10px;\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n  color: #5f6775;\n`;\n","import { getMovieReviews } from 'services/themoviedbAPI';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Container from 'components/Container';\nimport Section from 'components/Section';\nimport { Review, Text } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(res => {\n      setMovieReviews(res);\n    });\n  }, [movieId]);\n\n  return (\n    <Section>\n      <Container>\n        <ul>\n          {movieReviews.length > 0 ? (\n            movieReviews.map(({ author, id, content }) => (\n              <Review key={id}>\n                <p>\n                  <b>Author:</b> {author}\n                </p>\n                <p>{content}</p>\n              </Review>\n            ))\n          ) : (\n            <Text>We don't have any reviews for this movie.</Text>\n          )}\n        </ul>\n      </Container>\n    </Section>\n  );\n};\n\nexport default Reviews;\n","import styled from 'styled-components';\n\nexport const SectionWrp = styled.section`\n  padding-top: 34px;\n  padding-bottom: 34px;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionWrp } from './Section.styled';\n\nconst Section = ({ children }) => {\n  return <SectionWrp>{children}</SectionWrp>;\n};\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '43658d6d4343b834cdd29cb42d0281f9';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/';\n\nexport const getTrendingMovies = async () => {\n  const res = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return res.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const res = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieCast = async id => {\n  const res = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return res.data;\n};\n\nexport const getMovieReviews = async id => {\n  const res = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return res.data.results;\n};\n\nexport const getSearchMovie = async query => {\n  const res = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return res.data.results;\n};\n"],"names":["ContainerWpr","styled","Title","title","children","Review","Text","useState","movieReviews","setMovieReviews","movieId","useParams","useEffect","getMovieReviews","then","res","Section","Container","length","map","author","id","content","SectionWrp","BASE_URL","API_KEY","IMAGE_URL","getTrendingMovies","axios","data","results","getMovieDetails","getMovieCast","getSearchMovie","query"],"sourceRoot":""}