{"version":3,"file":"static/js/702.b12b2f3d.chunk.js","mappings":"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","sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerWpr = styled.div`\n  padding: 0 15px;\n  margin: 0 auto;\n  width: 1200px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 36px;\n  font-weight: 700;\n  margin-bottom: 60px;\n  text-align: center;\n  color: #fd5103;\n`;\n","import PropTypes from 'prop-types';\n\nimport { ContainerWpr, Title } from './Container.styled';\n\nconst Container = ({ title = '', children }) => {\n  return (\n    <ContainerWpr>\n      {title && <Title>{title}</Title>}\n\n      {children}\n    </ContainerWpr>\n  );\n};\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import styled from 'styled-components';\n\nexport const SectionWrp = styled.section`\n  padding-top: 34px;\n  padding-bottom: 34px;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionWrp } from './Section.styled';\n\nconst Section = ({ children }) => {\n  return <SectionWrp>{children}</SectionWrp>;\n};\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Form = styled.form`\n  position: relative;\n  margin-bottom: 60px;\n  justify-content: center;\n  display: flex;\n`;\n\nexport const Input = styled.input`\n  height: 40px;\n  width: 420px;\n  outline: none;\n  border: 2px solid #fd5103;\n  border-radius: 4px;\n  padding-left: 50px;\n  background: transparent;\n  background-color: #202025;\n  color: #ffffff;\n  font-size: 16px;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  display: flex;\n  padding: 10px;\n  border: none;\n  border-right: 2px solid #fd5103;\n  cursor: pointer;\n  background-color: transparent;\n  left: 362px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 14px;\n  margin-top: 30px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  width: 185px;\n  text-align: center;\n  border: 1px solid #fd5103;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    transform: scale(1.04);\n  }\n`;\n\nexport const ItemLink = styled(Link)`\n  color: #fd5103;\n  font-size: 18px;\n  width: 100%;\n  height: 100%;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    text-decoration: underline;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-size: 16px;\n  font-weight: 500;\n  padding: 8px;\n  flex-grow: 1;\n`;\n\nexport const Text = styled.p`\n  font-size: 20px;\n  color: #5f6775;\n`;\n","import { useState, useRef, useEffect } from 'react';\nimport { BsSearch } from 'react-icons/bs';\nimport { getSearchMovie } from 'services/themoviedbAPI';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport Section from 'components/Section';\nimport Container from 'components/Container';\nimport { IMAGE_URL } from 'services/themoviedbAPI';\nimport {\n  Input,\n  Button,\n  List,\n  Item,\n  ItemLink,\n  Title,\n  Form,\n  Text,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [searchMovie, setSearchMovie] = useState([]);\n  const isFirstRender = useRef('');\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query !== '') {\n      getSearchMovie(query).then(res => setSearchMovie(res));\n      isFirstRender.current =\n        'Sorry, there are no movies matching your search query. Please try again.';\n    }\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const query = form.elements.query.value.trim();\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n    if (query === '') return;\n    getSearchMovie(query).then(res => setSearchMovie(res));\n    form.reset();\n  };\n\n  return (\n    <Section>\n      <Container>\n        <Form onSubmit={handleSubmit}>\n          <Button type=\"submit\">\n            <BsSearch size=\"24\" color=\"#fd5103\" />\n          </Button>\n          <Input\n            type=\"text\"\n            name=\"query\"\n            placeholder=\"Search movie\"\n            autoComplete=\"off\"\n          />\n        </Form>\n\n        {searchMovie.length > 0 ? (\n          <List>\n            {searchMovie.map(({ id, title, poster_path }) => {\n              const path = `/movies/${id}`;\n              return (\n                <Item key={id}>\n                  <ItemLink to={path} state={{ from: location }}>\n                    {poster_path && (\n                      <img src={IMAGE_URL + 'w185' + poster_path} alt={title} />\n                    )}\n                    <Title>{title}</Title>\n                  </ItemLink>\n                </Item>\n              );\n            })}\n          </List>\n        ) : (\n          <Text>{isFirstRender.current}</Text>\n        )}\n      </Container>\n    </Section>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '43658d6d4343b834cdd29cb42d0281f9';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/';\n\nexport const getTrendingMovies = async () => {\n  const res = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return res.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const res = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieCast = async id => {\n  const res = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return res.data;\n};\n\nexport const getMovieReviews = async id => {\n  const res = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return res.data.results;\n};\n\nexport const getSearchMovie = async query => {\n  const res = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return res.data.results;\n};\n"],"names":["ContainerWpr","styled","Title","title","children","SectionWrp","Form","Input","Button","List","Item","ItemLink","Link","Text","useState","searchMovie","setSearchMovie","isFirstRender","useRef","location","useLocation","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getSearchMovie","then","res","current","Section","Container","onSubmit","e","preventDefault","form","target","elements","value","trim","reset","type","size","color","name","placeholder","autoComplete","length","map","id","poster_path","path","to","state","from","src","IMAGE_URL","alt","BASE_URL","API_KEY","getTrendingMovies","axios","data","results","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}