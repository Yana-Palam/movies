{"version":3,"file":"static/js/221.e8db6bf1.chunk.js","mappings":"gKAEaA,EAAeC,EAAAA,GAAAA,IAAH,iFAMZC,EAAQD,EAAAA,GAAAA,GAAH,mI,SCWlB,EAfkB,SAAC,GAA8B,IAAD,IAA3BE,MAAAA,OAA2B,MAAnB,GAAmB,EAAfC,EAAe,EAAfA,SAC/B,OACE,UAACJ,EAAD,WACGG,IAAS,SAACD,EAAD,UAAQC,IAEjBC,IAGN,C,sECVYC,E,QAAaJ,GAAAA,QAAH,uE,SCSvB,EARgB,SAAC,GAAkB,IAAhBG,EAAe,EAAfA,SACjB,OAAO,SAACC,EAAD,UAAaD,GACrB,C,6JCFYE,EAAOL,EAAAA,GAAAA,GAAH,4EAMJM,EAAON,EAAAA,GAAAA,GAAH,wOAYJO,GAAWP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,oOAaRC,EAAQD,EAAAA,GAAAA,GAAH,mG,kBCSlB,EAjCa,WACX,OAA4CS,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAWC,EAAAA,EAAAA,MAIjB,OAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAoBC,MAAK,SAAAC,GAAG,OAAIN,EAAkBM,EAAtB,GAC7B,GAAE,KAED,SAACC,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,CAAWjB,MAAM,iBAAjB,UACE,SAACG,EAAD,UACGK,EAAeU,KAAI,YAAiC,IAA9BlB,EAA6B,EAA7BA,MAAOmB,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,YAC1BC,EAAI,iBAAaF,GACvB,OACE,SAACf,EAAD,WACE,UAACC,EAAD,CAAUiB,GAAID,EAAME,MAAO,CAAEC,KAAMd,GAAnC,UACGU,IACC,gBAAKK,IAAKC,EAAAA,GAAY,OAASN,EAAaO,IAAK3B,KAEnD,SAACD,EAAD,UAAQC,QALDmB,EASd,SAKV,C,mOCnCKS,EAAW,gCACXC,EAAU,mCACHH,EAAY,8BAEZb,EAAiB,mCAAG,oGACbiB,IAAAA,IAAA,UACbF,EADa,sCACyBC,IAFZ,cACzBd,EADyB,yBAIxBA,EAAIgB,KAAKC,SAJe,2CAAH,qDAOjBC,EAAe,mCAAG,WAAMd,GAAN,uFACXW,IAAAA,IAAA,UAAaF,EAAb,iBAA8BT,EAA9B,oBAA4CU,IADjC,cACvBd,EADuB,yBAEtBA,EAAIgB,MAFkB,2CAAH,sDAKfG,EAAY,mCAAG,WAAMf,GAAN,uFACRW,IAAAA,IAAA,UACbF,EADa,iBACIT,EADJ,4BAC0BU,IAFlB,cACpBd,EADoB,yBAInBA,EAAIgB,MAJe,2CAAH,sDAOZI,EAAe,mCAAG,WAAMhB,GAAN,uFACXW,IAAAA,IAAA,UACbF,EADa,iBACIT,EADJ,4BAC0BU,IAFf,cACvBd,EADuB,yBAItBA,EAAIgB,KAAKC,SAJa,2CAAH,sDAOfI,EAAc,mCAAG,WAAMC,GAAN,uFACVP,IAAAA,IAAA,UACbF,EADa,gCACmBC,EADnB,kBACoCQ,IAF1B,cACtBtB,EADsB,yBAIrBA,EAAIgB,KAAKC,SAJY,2CAAH,qD","sources":["components/Container/Container.styled.js","components/Container/Container.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerWpr = styled.div`\n  padding: 0 15px;\n  margin: 0 auto;\n  width: 1200px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 36px;\n  font-weight: 700;\n  margin-bottom: 60px;\n  text-align: center;\n  color: #fd5103;\n`;\n","import PropTypes from 'prop-types';\n\nimport { ContainerWpr, Title } from './Container.styled';\n\nconst Container = ({ title = '', children }) => {\n  return (\n    <ContainerWpr>\n      {title && <Title>{title}</Title>}\n\n      {children}\n    </ContainerWpr>\n  );\n};\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import styled from 'styled-components';\n\nexport const SectionWrp = styled.section`\n  padding-top: 34px;\n  padding-bottom: 34px;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionWrp } from './Section.styled';\n\nconst Section = ({ children }) => {\n  return <SectionWrp>{children}</SectionWrp>;\n};\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 14px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  width: 185px;\n  text-align: center;\n  border: 1px solid #fd5103;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    transform: scale(1.04);\n  }\n`;\n\nexport const ItemLink = styled(Link)`\n  color: #fd5103;\n  font-size: 18px;\n  width: 100%;\n  height: 100%;\n  transition: text-decoration 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    text-decoration: underline;\n  }\n`;\n\nexport const Title = styled.h3`\n  font-size: 16px;\n  font-weight: 500;\n  padding: 6px;\n  flex-grow: 1;\n`;\n","import { useEffect, useState } from 'react';\n// import PropTypes from 'prop-types';\nimport { getTrendingMovies } from 'services/themoviedbAPI';\nimport Container from 'components/Container';\nimport Section from 'components/Section';\nimport { ItemLink } from './Home.styled';\nimport { useLocation } from 'react-router-dom';\nimport { IMAGE_URL } from 'services/themoviedbAPI';\nimport { List, Item, Title } from './Home.styled';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    getTrendingMovies().then(res => setTrendingMovies(res));\n  }, []);\n  return (\n    <Section>\n      <Container title=\"Trending today\">\n        <List>\n          {trendingMovies.map(({ title, id, poster_path }) => {\n            const path = `movies/${id}`;\n            return (\n              <Item key={id}>\n                <ItemLink to={path} state={{ from: location }}>\n                  {poster_path && (\n                    <img src={IMAGE_URL + 'w185' + poster_path} alt={title} />\n                  )}\n                  <Title>{title}</Title>\n                </ItemLink>\n              </Item>\n            );\n          })}\n        </List>\n      </Container>\n    </Section>\n  );\n};\n\n// Home.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '43658d6d4343b834cdd29cb42d0281f9';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/';\n\nexport const getTrendingMovies = async () => {\n  const res = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return res.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const res = await axios.get(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const getMovieCast = async id => {\n  const res = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return res.data;\n};\n\nexport const getMovieReviews = async id => {\n  const res = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return res.data.results;\n};\n\nexport const getSearchMovie = async query => {\n  const res = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return res.data.results;\n};\n"],"names":["ContainerWpr","styled","Title","title","children","SectionWrp","List","Item","ItemLink","Link","useState","trendingMovies","setTrendingMovies","location","useLocation","useEffect","getTrendingMovies","then","res","Section","Container","map","id","poster_path","path","to","state","from","src","IMAGE_URL","alt","BASE_URL","API_KEY","axios","data","results","getMovieDetails","getMovieCast","getMovieReviews","getSearchMovie","query"],"sourceRoot":""}